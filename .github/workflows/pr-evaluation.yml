name: PR Evaluation v2

on:
  pull_request:
    types: [opened]

env:
  EVALUATION_API_URL: ${{ secrets.EVALUATION_API_URL || 'https://claude-webhook-production.up.railway.app/evaluate-pullrequest' }}

jobs:
  evaluate-pr:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Get PR information
        id: pr-info
        run: |
          echo "pr_number=${{ github.event.number }}" >> $GITHUB_OUTPUT
          echo "pr_url=${{ github.event.pull_request.html_url }}" >> $GITHUB_OUTPUT
          echo "pr_title=${{ github.event.pull_request.title }}" >> $GITHUB_OUTPUT
          echo "pr_author=${{ github.event.pull_request.user.login }}" >> $GITHUB_OUTPUT
          echo "pr_branch=${{ github.event.pull_request.head.ref }}" >> $GITHUB_OUTPUT
          echo "base_branch=${{ github.event.pull_request.base.ref }}" >> $GITHUB_OUTPUT
      
      - name: Display PR information
        run: |
          echo "PR Information:"
          echo "  Number: ${{ steps.pr-info.outputs.pr_number }}"
          echo "  Title: ${{ steps.pr-info.outputs.pr_title }}"
          echo "  Author: ${{ steps.pr-info.outputs.pr_author }}"
          echo "  Branch: ${{ steps.pr-info.outputs.pr_branch }}"
          echo "  Base: ${{ steps.pr-info.outputs.base_branch }}"
          echo "  URL: ${{ steps.pr-info.outputs.pr_url }}"
      
      - name: Call PR Evaluation API
        id: evaluate
        run: |
          echo "Calling PR Evaluation API..."
          echo "API URL: ${{ env.EVALUATION_API_URL }}"
          
          response=$(curl -s -w "\n%{http_code}" \
            --location '${{ env.EVALUATION_API_URL }}' \
            --header 'Content-Type: application/json' \
            --header 'X-Webhook-Secret: ${{ secrets.WEBHOOK_SECRET }}' \
            --data "{
              \"prUrl\": \"${{ steps.pr-info.outputs.pr_url }}\",
              \"prNumber\": ${{ steps.pr-info.outputs.pr_number }},
              \"prTitle\": \"${{ steps.pr-info.outputs.pr_title }}\",
              \"prAuthor\": \"${{ steps.pr-info.outputs.pr_author }}\",
              \"prBranch\": \"${{ steps.pr-info.outputs.pr_branch }}\",
              \"baseBranch\": \"${{ steps.pr-info.outputs.base_branch }}\",
              \"repository\": \"${{ github.repository }}\"
            }")
          
          # Extract HTTP status code and response body
          http_code=$(echo "$response" | tail -n1)
          response_body=$(echo "$response" | head -n -1)
          
          # Sanitize response body to remove control characters
          sanitized_response=$(echo "$response_body" | sed 's/[\x00-\x1F\x7F]//g')
          
          echo "API Response:"
          echo "  Status Code: $http_code"
          echo "  Response Length: ${#sanitized_response}"
          
          # Save response for next steps
          echo "api_response=$sanitized_response" >> $GITHUB_OUTPUT
          echo "api_status=$http_code" >> $GITHUB_OUTPUT
          
          # Check if API call was successful
          if [ "$http_code" -eq 200 ]; then
            echo "PR evaluation completed successfully"
            echo "evaluation_status=success" >> $GITHUB_OUTPUT
          else
            echo "PR evaluation failed with status code: $http_code"
            echo "evaluation_status=failed" >> $GITHUB_OUTPUT
          fi
      
      - name: Log evaluation results
        if: always()
        run: |
          echo "Evaluation completed!"
          echo "Status: ${{ steps.evaluate.outputs.evaluation_status }}"
          
          if [ "${{ steps.evaluate.outputs.evaluation_status }}" = "success" ]; then
            echo "PR evaluation completed successfully"
            echo "The API will handle commenting on the PR automatically"
          else
            echo "PR evaluation failed"
            echo "Check the API logs for more details"
          fi
      
      - name: Summary
        if: always()
        run: |
          echo "## PR Evaluation Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **PR Number:** ${{ steps.pr-info.outputs.pr_number }}" >> $GITHUB_STEP_SUMMARY
          echo "- **PR Title:** ${{ steps.pr-info.outputs.pr_title }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Author:** ${{ steps.pr-info.outputs.pr_author }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch:** ${{ steps.pr-info.outputs.pr_branch }} → ${{ steps.pr-info.outputs.base_branch }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Evaluation Status:** ${{ steps.evaluate.outputs.evaluation_status }}" >> $GITHUB_STEP_SUMMARY
          echo "- **API Status Code:** ${{ steps.evaluate.outputs.api_status }}" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ steps.evaluate.outputs.evaluation_status }}" = "success" ]; then
            echo "✅ **Result:** PR evaluation completed successfully!" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **Result:** PR evaluation failed!" >> $GITHUB_STEP_SUMMARY
          fi
